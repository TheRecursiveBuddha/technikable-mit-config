/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BAS_L 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
    chosen {
        zmk,matrix_transform = &mit_transform;
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <NAV_L NUM_L>;
            then-layer = <SYM_L>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
&kp Q    &kp W    &kp E       &kp R       &kp T     &kp C_VOL_DN   &kp C_VOL_UP   &kp Y       &kp U       &kp I       &kp O     &kp P
&kp A    &kp S    &kp D       &kp F       &kp G     &kp C_MUTE     &kp LSHFT      &kp H       &kp J       &kp K       &kp L     &kp SEMI
&kp Z    &kp X    &kp C       &kp V       &kp B     &kp TAB        &kp BKSP       &kp N       &kp M       &kp COMMA   &kp DOT   &kp FSLH
                  &kp LCTRL   &sl NAV_L   &kp RET   &kp LGUI                      &kp SPACE   &sl NUM_L   &kp RALT
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
&bt BT_CLR     &trans         &trans         &trans         &trans         &kp C_BRI_DN   &kp C_BRI_UP   &trans    &trans     &trans      &trans      &trans
&trans         &trans         &trans         &trans         &trans         &trans         &kp C_STOP     &trans    &kp LARW   &kp DARW    &kp UARW    &kp RARW
&bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &kp C_PREV     &kp C_NEXT     &trans    &kp HOME   &kp PG_DN   &kp PG_UP   &kp END
                              &trans         &trans         &trans         &kp C_PP                      &kp ESC   &kp DEL    &trans
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
&kp LBKT    &kp N7    &kp N8    &kp N9    &kp RBKT    &trans   &trans   &trans   &trans   &trans   &trans   &trans
&kp MINUS   &kp N4    &kp N5    &kp N6    &kp EQUAL   &trans   &trans   &trans   &trans   &trans   &trans   &trans
&kp GRAVE   &kp N1    &kp N2    &kp N3    &kp BSLH    &trans   &trans   &trans   &trans   &trans   &trans   &trans
                      &trans    &kp N0    &kp SQT     &trans            &trans   &trans   &trans
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
&kp LBRC    &kp LS(N7)   &kp LS(N8)   &kp LS(N9)   &kp RBRC       &trans    &trans    &trans    &trans    &trans    &trans    &bootloader
&kp UNDER   &kp LS(N4)   &kp LS(N5)   &kp LS(N6)   &kp PLUS       &trans    &trans    &trans    &trans    &trans    &trans    &trans
&kp TILDE   &kp LS(N1)   &kp LS(N2)   &kp LS(N3)   &kp LS(BSLH)   &trans    &trans    &trans    &trans    &trans    &trans    &trans
                         &trans       &kp LS(N0)   &kp DQT        &trans              &trans    &trans    &trans
            >;
        };

    };
};
