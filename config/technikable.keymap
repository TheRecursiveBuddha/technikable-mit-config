/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BAS_L 0
#define NAV_L 1
#define NUM_L 2
#define FUN_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
    chosen {
        zmk,matrix_transform = &mit_transform;
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
&kp Q         &kp W         &kp E          &kp R            &kp T            &kp C_VOL_DN    &kp C_VOL_UP    &kp Y              &kp U            &kp I          &kp O         &kp P
&hm LGUI A    &hm LALT S    &hm LCTRL D    &hm LSHFT F      &kp G            &kp LS(LALT)    &kp C_MUTE      &kp H              &hm RSHFT J      &hm RCTRL K    &hm RALT L    &hm RGUI SEMI
&kp Z         &kp X         &kp C          &kp V            &kp B            &kp C_PREV      &kp C_NEXT      &kp N              &kp M            &kp COMMA      &kp DOT       &kp FSLH
                            &none          &lt NAV_L ESC    &lt NAV_L RET    &kp C_PP                        &lt NUM_L SPACE    &lt FUN_L TAB    &none
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
&none           &none                     &none                     &sys_reset      &bootloader     &trans    &trans    &kp C_VOL_UP    &kp C_PREV    &kp C_PP     &kp C_NEXT    &none
&kp C_BRI_DN    &kp LS(LALT(C_BRI_DN))    &kp LS(LALT(C_BRI_UP))    &kp C_BRI_UP    &bt BT_CLR      &trans    &trans    &kp C_VOL_DN    &kp LARW      &kp DARW     &kp UARW      &kp RARW
&bt BT_SEL 0    &bt BT_SEL 1              &bt BT_SEL 2              &bt BT_SEL 3    &bt BT_SEL 4    &trans    &trans    &kp C_MUTE      &kp HOME      &kp PG_DN    &kp PG_UP     &kp END
                                          &trans                    &trans          &trans          &trans              &kp BKSP        &kp DEL       &none
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
&kp LBKT     &kp N7    &kp N8    &kp N9    &kp RBKT     &trans    &trans    &trans    &trans    &trans    &trans    &trans
&kp MINUS    &kp N4    &kp N5    &kp N6    &kp EQUAL    &trans    &trans    &trans    &trans    &trans    &trans    &trans
&kp GRAVE    &kp N1    &kp N2    &kp N3    &kp BSLH     &trans    &trans    &trans    &trans    &trans    &trans    &trans
                       &none     &kp N0    &kp SQT      &trans              &trans    &trans    &trans
            >;
        };

        fun_Layer {
            label = "Fun";
            bindings = <
&kp F12    &kp F7    &kp F8    &kp F9    &kp F15    &trans    &trans    &trans    &trans    &trans    &trans    &trans
&kp F11    &kp F4    &kp F5    &kp F6    &kp F14    &trans    &trans    &trans    &trans    &trans    &trans    &trans
&kp F10    &kp F1    &kp F2    &kp F3    &kp F13    &trans    &trans    &trans    &trans    &trans    &trans    &trans
                     &none     &none     &none      &trans              &trans    &trans    &trans
            >;
        };

    };
};
